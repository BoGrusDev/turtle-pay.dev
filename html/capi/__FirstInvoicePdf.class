<?php
/*

    FirstInvoicePdf

    20200-01-09

	sudo chmod -R 777 /var/www/html/f-invoice
*/

use setasign\Fpdi;

class FirstInvoicePdfClass {


	public function __construct($folder, $mall = "") {
		$this->folder = $folder;
        $this->mall = "fakturamall.pdf";;
	}

	public function Create($invoice) {

		$font = 'Helvetica';
		$extra = 0;
		if ($invoice->returnInvoice == "y") {
			//$invoice->return_date = '2018-06-15';
			//$invoice->return_amount = '-300.00';
			//$invoice->total = '1929.00 kr';
			$extra = 5;
		}

		//$mall = "fakt1bg.pdf";
		$mall = "fakturamall.pdf";
		//call the FPDF library
		require('fpdf181/fpdf.php');
		require_once('ftpi/autoload.php');
		$pdf = new Fpdi\Fpdi();

		$pdf->AddFont('OCR-B','','ocrb.php');
		$pdf->setSourceFile($mall);
		$templateId = $pdf->importPage(1);
		// get the size of the imported page
		$size = $pdf->getTemplateSize($templateId);
		$pdf->AddPage('P', array($size['width'], 310));
		//$pdf->AddPage('P', array($size['width'], $size['height']));
		$pdf->useTemplate($templateId);

		$pdf->SetFont($font);

		$pdf->SetFontSize(16);
		$pdf->SetXY(18, 4);
		$pdf->Write(16, utf8_decode($invoice->company_name));

		$pdf->SetFont($font,'I');
		$pdf->SetFontSize(9);
		$pdf->SetXY(18, 11);
		$pdf->Write(14, 'i samarbete med Turtle Pay');
		$pdf->SetXY(18, 15);
		$pdf->Write(14, utf8_decode('P.O. Box 24078, SE-104 50 Stockholm'));

		//$pdf->Image('faktura-logo.jpg', null,null,60,31);
		$pdf->SetFont($font);
		$pdf->SetFontSize(14);
		$pdf->SetXY(116, 0);
		$pdf->Write(16, 'FAKTURA');

		$pdf->SetFont($font,'B');
		$pdf->SetFontSize(9);
		$pdf->SetXY(116, 8);
		$pdf->Write(11, 'Utskriftsdatum');
		$pdf->SetFont('');
		$pdf->SetFont($font);
		$pdf->SetFontSize(10);
		$pdf->SetXY(116, 13);
		$pdf->Write(10, $invoice->date);

		$pdf->SetFont($font,'B');
		$pdf->SetFontSize(9);
		$pdf->SetXY(116, 17);
		$pdf->Write(11, utf8_decode('Förfallodatum'));
		$pdf->SetFont('');
		$pdf->SetFont($font);
		$pdf->SetFontSize(10);
		$pdf->SetXY(116, 22);
		$pdf->Write(10, $invoice->duedate);

		if($invoice->people_company_on == 'y') {
			
			$pdf->SetFontSize(10);
			$pdf->SetXY(116, 33);
			$pdf->Write(10, utf8_decode($invoice->name));
			$pdf->SetXY(116, 38);
			$pdf->Write(10, utf8_decode($invoice->spec->people_company));
			$pdf->SetXY(116, 43);
			$pdf->Write(10, utf8_decode($invoice->spec->people_company_address));
			$pdf->SetXY(116, 48);
			$pdf->Write(10, utf8_decode($invoice->spec->people_company_postcode . ' ' . $invoice->spec->people_company_city));

		}
		else {
			$pdf->SetFontSize(10);
			$pdf->SetXY(116, 33);
			$pdf->Write(10, utf8_decode($invoice->name));
			$pdf->SetXY(116, 38);
			$pdf->Write(10, utf8_decode($invoice->address));
			$pdf->SetXY(116, 43);
			$pdf->Write(10, utf8_decode($invoice->postaddress));
		}
		$pdf->SetFont($font,'B');
		$pdf->SetFontSize(11);
		$pdf->SetXY(18, 68);
		$pdf->SetFillColor(220,220,220);
		$pdf->Cell(184,9,'   Specifikation','BTLR',0,'L',true);
		//$pdf->Write(10, utf8_decode('Specifikation'));

		$pdf->SetFont('');
		$pdf->SetFont($font);
		$pdf->SetFontSize(10);
		$pdf->SetXY(20, 76);
		$pdf->Write(10, utf8_decode('Transaktionsdatum'));  // Inköpsdatum
		//$pdf->SetXY(50, 76);
		//$pdf->Write(10, utf8_decode('Butik'));
		
		$pdf->SetXY(20, 96);
		$pdf->Write(10, utf8_decode('Kvittoreferens'));
		$pdf->SetXY(50, 96);
		$pdf->Write(10, utf8_decode($invoice->receipt_number));
		
		if ($invoice->spec->has_vat == 'y') {
			$pdf->SetFontSize(8);
			$pdf->SetXY(20, 100);
			$pdf->Write(10, utf8_decode('(varav moms (' . $invoice->spec->vat . '%), ' . $invoice->spec->vat_amount . ' kr, momsreg.nr. SE' . $invoice->spec->company_id_number . '01)'));
			$pdf->SetFont('');
			$pdf->SetFont($font);
			$pdf->SetFontSize(10);
		}

		if ($invoice->spec_type == '1') {
			//$pdf->SetXY(20, 104);
			//$pdf->Write(10, utf8_decode('Specifikation:'));
			$pdf->SetXY(20, 109);
			$pdf->Write(10, utf8_decode($invoice->spec));
		}

		$pdf->SetXY(20, 81);
		$pdf->Write(10, $invoice->purchase_date);
		$pdf->SetXY(50, 81);
		$pdf->Write(10, utf8_decode($invoice->company_name));
		
			$pdf->SetFontSize(8);
			$pdf->SetXY(50, 85);
			$pdf->Write(10, utf8_decode('(Org.nr. ' . $invoice->spec->company_id_number . ')'));
			$pdf->SetFont('');
			$pdf->SetFont($font);
			$pdf->SetFontSize(10);
		
		$refundAll = false;
		if ($invoice->returnInvoice == "y") {
			$invoice->credit_amount = $invoice->prev_amount;
			$pdf->SetXY(114, 81);
			$pdf->Write(10, utf8_decode('Returbelopp'));
			$pdf->SetXY(154, 81);
			$pdf->Write(10, utf8_decode('-' . $invoice->refund_amount)); //  + ' kr';
			if ($invoice->refund_all == 'y') {
				$refundAll = true;

				$pdf->SetXY(114, 86); // 91
				$pdf->Write(10, utf8_decode('Totalt (kr)'));
				$pdf->SetXY(154, 86); // 91
				$pdf->Write(10, utf8_decode($invoice->total)); //  + ' kr';

				$pdf->SetXY(114, 91); // 101
				$pdf->Write(10, utf8_decode('OCR-nummer'));
				$pdf->SetXY(154, 91); // 101
				$pdf->Write(10, utf8_decode($invoice->ocrno));
			}

		}
		$pdf->SetXY(114, 76); // 81
		$pdf->Write(10, utf8_decode('Köpesumma'));
		$pdf->SetXY(154, 76); // 81
		$pdf->Write(10, utf8_decode($invoice->credit_amount)); //  + ' kr';

		$pdf->SetXY(50, 89); // 86
		$pdf->Write(10, utf8_decode($invoice->shop_name));

		if ($refundAll == false) {
			if ($invoice->start_fee > 0) {
				$pdf->SetXY(114, 81 + $extra); //86
				$pdf->Write(10, utf8_decode('Uppläggningsavgift'));
				$pdf->SetXY(154, 81 + $extra); // 86
				$pdf->Write(10, utf8_decode($invoice->start_fee)); // + ' kr';
				$extra = $extra + 5;
			}

			$pdf->SetXY(114, 81 + $extra); // 86
			$pdf->Write(10, utf8_decode('Aviavgift'));
			$pdf->SetXY(154, 81 + $extra); // 86
			$pdf->Write(10, utf8_decode($invoice->fee)); // + ' kr';

			//$pdf->SetFont($font,'B');

		}


		if ($refundAll == false) {
			$pdf->SetFont($font,'B');
			$pdf->SetXY(114, 86 + $extra); // 91
			$pdf->Write(10, utf8_decode('Totalt (kr)'));
			$pdf->SetXY(154, 86 + $extra); // 91
			$pdf->Write(10, utf8_decode($invoice->total)); //  + ' kr';
			$pdf->SetFont('');
			$pdf->SetFont($font);
			$pdf->SetFontSize(10);

			$pdf->SetXY(114, 91 + $extra); // 96
			$pdf->Write(10, utf8_decode('Bankgiro'));

			$pdf->SetXY(154, 91 + $extra); // 96
			$pdf->Write(10, '5258-0016');

			$pdf->SetXY(114, 96 + $extra); // 101
			$pdf->Write(10, utf8_decode('OCR-nummer'));
			$pdf->SetXY(154, 96 + $extra); // 101
			$pdf->Write(10, utf8_decode($invoice->ocrno));

			$pdf->SetXY(114, 101 + $extra); // 106
			$pdf->Write(10, utf8_decode('Betalning oss tillhanda'));
			$pdf->SetXY(154, 101 + $extra); // 106
			$pdf->Write(10, utf8_decode($invoice->duedate));

			// ---
			// --- Specifikation 
			// ---
			
			if (!isset($invoice->specOn) || $invoice->specOn == "n") {
				// do nothing
			}
			else if ($invoice->specOn == "y") {
				// Set the header
				
				
				if (sizeof($invoice->spec->participant[0]->option) <= 2 && $invoice->spec->tdb_on == 'n') {

					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					$pdf->SetXY(20, 112 + $extra);
					$pdf->Write(10, utf8_decode('Namn'));
				
					$pdf->SetFont('');
					$pdf->SetFont($font);
					$pdf->SetFontSize(8);

					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$plusRow = ($i + 1) * 4;
						$pdf->SetXY(20, 112 + $extra + $plusRow);
						$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->first_name . ' ' . $invoice->spec->participant[$i]->last_name));
						
					} 

					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					// -- Write Option header
					for ($i=0; $i < sizeof($invoice->spec->participant[0]->option); $i++) {
						$plusCol = ($i) * 42; // 34
						$pdf->SetXY( 70 + $plusCol, 112 + $extra );
						$pdf->Write(10, utf8_decode($invoice->spec->participant[0]->option[$i]->sel_label));
					} 
					// Check if has note
					$hasNote = false;
					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						if (strlen($invoice->spec->participant[$i]->note) > 1) {
							$hasNote = true;
						}
					}
					if ($hasNote) {
						$plusCol = (sizeof($invoice->spec->participant[0]->option)) * 42; // 34
						$pdf->SetXY( 70 + $plusCol, 112 + $extra);
						$pdf->Write(10, utf8_decode($invoice->spec->note_label));
					}
					$pdf->SetFont('');
					$pdf->SetFont($font);
					$pdf->SetFontSize(8);
					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$plusRow = ($i + 1) * 4;
						for ($j=0; $j < sizeof($invoice->spec->participant[$i]->option); $j++) {
							$plusCol = ($j) * 42; // 34
							$pdf->SetXY( 70 + $plusCol, 112 + $extra + $plusRow );
							$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->option[$j]->option_text));
						} 
						if (strlen($invoice->spec->participant[$i]->note) > 0) {
							$plusCol = (sizeof($invoice->spec->participant[$i]->option)) * 42; // 34
							$pdf->SetXY( 70 + $plusCol, 112 + $extra + $plusRow );
							$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->note));
						}
					}
				}
				else {
					//echo '<pre>';
					//print_r($invoice->spec->participant);
					//die('');
					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					$specRow = -1 + $extra; // Fix
					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$specRow = $specRow + 4;
						$pdf->SetFont($font,'B');
						$pdf->SetFontSize(8);
						$pdf->SetXY(20, 102 + $specRow);
						$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->first_name . ' ' . $invoice->spec->participant[$i]->last_name));
						$rowText = '';
						
						$columnCounter = 0;
						for ($j=0; $j < sizeof($invoice->spec->participant[$i]->option); $j++) {
							// $columnCounter++;
							if ($columnCounter > 6) {
								$rowText = rtrim($rowText, ', ');
								$pdf->SetFont('');
								$pdf->SetFont($font);
								$pdf->SetFontSize(7);
								$specRow = $specRow + 3;
								$pdf->SetXY(20, 102 + $specRow);
								$pdf->Write(10, utf8_decode($rowText));
								$rowText = '';
								$columnCounter = 0;
							}

							if ($invoice->spec->participant[$i]->option[$j]->option_text == 'Ej vald') {
								// skip
							}
							else {
								$columnCounter++;
								$rowText .= $invoice->spec->participant[$i]->option[$j]->option_text . ', ';
							}
						
						}
						$rowText = rtrim($rowText, ', ');
						$pdf->SetFont('');
						$pdf->SetFont($font);
						$pdf->SetFontSize(7);
						$specRow = $specRow + 3;
						$pdf->SetXY(20, 102 + $specRow);
						$pdf->Write(10, utf8_decode($rowText));

						$note = trim($invoice->spec->participant[$i]->note);
						if (strlen($note) > 0) {
							$specRow = $specRow + 3; 
							$rowText = $invoice->spec->participant[$i]->note; //  . ', ';
							//$rowText = rtrim($rowText, ', ');
							$pdf->SetFont('');
							$pdf->SetFont($font);
							$pdf->SetFontSize(7);
							$pdf->SetXY(20, 102 + $specRow);
							$pdf->Write(10, utf8_decode($rowText));
						}
					}
				} 
				
				
				/*
				if (sizeof($invoice->spec->participant[0]->option) <= 3) {

					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					$pdf->SetXY(20, 112 + $extra);
					$pdf->Write(10, utf8_decode('Namn'));
				
					$pdf->SetFont('');
					$pdf->SetFont($font);
					$pdf->SetFontSize(8);

					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$plusRow = ($i + 1) * 4;
						$pdf->SetXY(20, 112 + $extra + $plusRow);
						$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->first_name . ' ' . $invoice->spec->participant[$i]->last_name));
						
					} 

					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					// -- Write Option header
					for ($i=0; $i < sizeof($invoice->spec->participant[0]->option); $i++) {
						$plusCol = ($i) * 34;
						$pdf->SetXY( 70 + $plusCol, 112 + $extra );
						$pdf->Write(10, utf8_decode($invoice->spec->participant[0]->option[$i]->sel_label));
					} 
					$pdf->SetFont('');
					$pdf->SetFont($font);
					$pdf->SetFontSize(8);
					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$plusRow = ($i + 1) * 4;
						for ($j=0; $j < sizeof($invoice->spec->participant[$i]->option); $j++) {
							$plusCol = ($j) * 34;
							$pdf->SetXY( 70 + $plusCol, 112 + $extra + $plusRow );
							$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->option[$j]->option_text));
						} 
					}
				}
				else {
				
					$pdf->SetFont($font,'B');
					$pdf->SetFontSize(8);
					for ($i=0; $i < sizeof($invoice->spec->participant); $i++) {
						$plusRow = ($i + 1) * 7;
						$pdf->SetFont($font,'B');
						$pdf->SetFontSize(8);
						$pdf->SetXY(20, 102 + $extra + $plusRow);
						$pdf->Write(10, utf8_decode($invoice->spec->participant[$i]->first_name . ' ' . $invoice->spec->participant[$i]->last_name));
						$rowText = '';
					
						for ($j=0; $j < sizeof($invoice->spec->participant[$i]->option); $j++) {
							//if (sizeof($invoice->spec->participant[$i]->option) <= 4) {
							//	$rowText .= $invoice->spec->participant[0]->option[$j]->sel_label . ': ' . $invoice->spec->participant[$i]->option[$j]->option_text . ', ';
							//} 
							//else {
								$rowText .= $invoice->spec->participant[$i]->option[$j]->option_text . ', ';
							//}
						}
						
						if (strlen($invoice->spec->participant[$i]->note) > 0) {
							$rowText .= $invoice->spec->participant[$i]->note . ', ';
						}
						
						
						$rowText = rtrim($rowText, ', ');
						$pdf->SetFont('');
						$pdf->SetFont($font);
						$pdf->SetFontSize(7);
						$pdf->SetXY(20, 102 + $extra + $plusRow + 3);
						$pdf->Write(10, utf8_decode($rowText));
					}
				//} 
				*/
			}

			if ($invoice->returnInvoice == "y" || $invoice->start_fee > 0) {
				$extra += 30;
			}
			else {
				$extra += 35;
			}
			
			$totalValue = str_replace(',' , '', $invoice->total);
			if ((float)$totalValue > 100) {
				$pdf->SetFont($font,'B');
				$pdf->SetFontSize(11);
				$pdf->SetXY(20, 126 + $extra); // 121
				$pdf->Write(10, utf8_decode("Ta't lugnt!  Betala i din egen takt"));
				$pdf->SetFont('');
				$pdf->SetFont($font);
				$pdf->SetFontSize(10);

				$pdf->SetXY(20, 131 + $extra); // 126
				$pdf->Write(10, utf8_decode('Du kan istället betala valfritt belopp under ' .  $invoice->monthly_no . ' månader, dock lägst '));

			
				$pdf->SetXY(124, 131 + $extra); // 126
				$pdf->SetFont($font,'B');
				$pdf->Write(10, utf8_decode( $invoice->monthly_payment_total . ' kronor'));
				$pdf->SetFont('');
				$pdf->SetFont($font);
				$pdf->SetFontSize(10);

				$len = strlen($invoice->monthly_payment_total);
				if ($len <= 2) {
					// under 100
					$posPlus = 0;
				}
				else if ($len == 3) {
					// over 99 and under 1000
					$posPlus = 2;
				}
				else if ($len >= 4) {
					// over 1000
					$posPlus = 5;
				}

				$pdf->SetXY(140 + $posPlus, 131 + $extra); // 126
				$pdf->Write(10, utf8_decode(' senast ' . $invoice->duedate . '.'));

				$interestText = "Räntefritt " . $invoice->grace_days . " dagar, ränta " . $invoice->interest . "%, aviavg. 29 kr";
				if ($invoice->admin_fee > 0) {
					$interestText .= ', adm.avg. ' . $invoice->admin_fee . ' kr/mån';
				}
				$interestText .= ".";

				$effectiveText = "(Effektivränta på 10,000kr " . $invoice->effective_rate . "%, totalkost. 12mån " . number_format($invoice->effective_total) . "kr)"; // effective_rate
				
				$pdf->SetXY(20, 136 + $extra);
				$pdf->Write(10, utf8_decode($interestText));

				$pdf->SetFont($font);
				$pdf->SetFontSize(8);
				$pdf->SetXY(96, 136 + $extra);
				$pdf->Write(10, utf8_decode($effectiveText));

				$pdf->SetFont($font);
				$pdf->SetFontSize(10);

			}

			$pdf->SetXY(20, 141 + $extra); // 136
			$pdf->Write(10, utf8_decode('Ange fakturans OCR-nummer vid inbetalningen. Se villkor på följande länk: www.turtle-pay.com/villkor.'));

			//$pdf->SetXY(20, 141 + $extra);
			//$pdf->Write(10, utf8_decode('Se villkor på följande länk: www.turtle-pay.com/villkor.'));

			$pdf->SetXY(20, 146 + $extra);
			$pdf->Write(10, utf8_decode('Förseningsavgift och dröjsmålsränta kan tillkomma vid sen betalning.'));
		}

		$pdf->Line(18,190,201,190);
		$pdf->SetFontSize(8);
		$pdf->SetXY(18, 188);
		$pdf->Write(10, utf8_decode('Turtle Pay AB'));
		$pdf->SetXY(42, 188);
		$pdf->Write(10, utf8_decode('Org nr: 559101-6786'));
		$pdf->SetXY(74, 188);
		$pdf->Write(10, utf8_decode('P.O. Box 24078'));
		$pdf->SetXY(100, 188);
		$pdf->Write(10, utf8_decode('SE-104 50 Stockholm'));
		$pdf->SetXY(140, 188);
		$pdf->Write(10, utf8_decode('Telefon 08-80 62 20'));
		//$pdf->SetXY(140, 188);
		//$pdf->Write(10, utf8_decode('Öppet vardagar 9-16'));
		$pdf->SetXY(172, 188);
		$pdf->Write(10, utf8_decode('info@turtle-pay.com'));

		if ($refundAll == false) {
			$pdf->SetFontSize(8);
			$pdf->SetXY(20, 230);
			$pdf->Write(10, utf8_decode($invoice->name));
			$pdf->SetXY(20, 234);
			$pdf->Write(10, utf8_decode($invoice->address));
			$pdf->SetXY(20, 238);
			$pdf->Write(10, utf8_decode($invoice->postaddress));

			$pdf->SetFontSize(12);
			//$pdf->SetXY(134, 218);
			$pdf->SetXY(90, 238);
			$pdf->Write(12, utf8_decode('Fyll i valfritt belopp'));

			// Write the OCR
			//$pdf->SetFont('OCRB10PitchBT-Regular');
			$pdf->SetFont('OCR-B','',12);
			//$pdf->SetFontSize(10);

			$pdf->SetXY(12, 272);
			$pdf->Write(10, utf8_decode('#'));

			$pdf->SetXY(49, 272);

			$pdf->Write(10, utf8_decode($invoice->ocrno . ' #'));

			$pdf->SetXY(167, 272);
			$pdf->Write(10, utf8_decode('52580016#42#'));
		}
		$filename = $this->folder . $invoice->invoice_filename;
		try {
			$pdf->Output($filename,'F');
		}
		catch(Exception $e) {
			echo 'Message: ' .$e->getMessage();
		}
	}


}




 ?>
